digraph "radio.recorder" {
    // Path: D:\develop\workspace\radio-recorder\gradle\release\radio-recorder-0.0.7.jar
   "cyou.obliquerays.logging"                         -> "java.io (java.base)";
   "cyou.obliquerays.logging"                         -> "java.lang (java.base)";
   "cyou.obliquerays.logging"                         -> "java.lang.invoke (java.base)";
   "cyou.obliquerays.logging"                         -> "java.net (java.base)";
   "cyou.obliquerays.logging"                         -> "java.time (java.base)";
   "cyou.obliquerays.logging"                         -> "java.time.format (java.base)";
   "cyou.obliquerays.logging"                         -> "java.util (java.base)";
   "cyou.obliquerays.logging"                         -> "java.util.logging (java.logging)";
   "cyou.obliquerays.media"                           -> "cyou.obliquerays.media.command (radio.recorder)";
   "cyou.obliquerays.media"                           -> "cyou.obliquerays.media.config (radio.recorder)";
   "cyou.obliquerays.media"                           -> "cyou.obliquerays.media.downloader (radio.recorder)";
   "cyou.obliquerays.media"                           -> "cyou.obliquerays.media.downloader.model (radio.recorder)";
   "cyou.obliquerays.media"                           -> "cyou.obliquerays.status (radio.recorder)";
   "cyou.obliquerays.media"                           -> "java.io (java.base)";
   "cyou.obliquerays.media"                           -> "java.lang (java.base)";
   "cyou.obliquerays.media"                           -> "java.lang.invoke (java.base)";
   "cyou.obliquerays.media"                           -> "java.nio.file (java.base)";
   "cyou.obliquerays.media"                           -> "java.time (java.base)";
   "cyou.obliquerays.media"                           -> "java.time.temporal (java.base)";
   "cyou.obliquerays.media"                           -> "java.util (java.base)";
   "cyou.obliquerays.media"                           -> "java.util.concurrent (java.base)";
   "cyou.obliquerays.media"                           -> "java.util.function (java.base)";
   "cyou.obliquerays.media"                           -> "java.util.logging (java.logging)";
   "cyou.obliquerays.media"                           -> "java.util.stream (java.base)";
   "cyou.obliquerays.media.command"                   -> "cyou.obliquerays.media.config (radio.recorder)";
   "cyou.obliquerays.media.command"                   -> "cyou.obliquerays.media.downloader.model (radio.recorder)";
   "cyou.obliquerays.media.command"                   -> "java.io (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.lang (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.lang.invoke (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.nio.charset (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.nio.file (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.util (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.util.concurrent (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.util.function (java.base)";
   "cyou.obliquerays.media.command"                   -> "java.util.logging (java.logging)";
   "cyou.obliquerays.media.command"                   -> "java.util.stream (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.io (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.lang (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.net (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.nio.file (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.time (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.time.format (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.util (java.base)";
   "cyou.obliquerays.media.config"                    -> "java.util.logging (java.logging)";
   "cyou.obliquerays.media.downloader"                -> "cyou.obliquerays.media.config (radio.recorder)";
   "cyou.obliquerays.media.downloader"                -> "cyou.obliquerays.media.downloader.model (radio.recorder)";
   "cyou.obliquerays.media.downloader"                -> "cyou.obliquerays.media.downloader.subscriber (radio.recorder)";
   "cyou.obliquerays.media.downloader"                -> "java.io (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.lang (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.lang.invoke (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.net (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.net.http (java.net.http)";
   "cyou.obliquerays.media.downloader"                -> "java.nio.file (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.nio.file.attribute (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.time (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.time.temporal (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.util (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.util.concurrent (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.util.function (java.base)";
   "cyou.obliquerays.media.downloader"                -> "java.util.logging (java.logging)";
   "cyou.obliquerays.media.downloader"                -> "java.util.stream (java.base)";
   "cyou.obliquerays.media.downloader.model"          -> "java.lang (java.base)";
   "cyou.obliquerays.media.downloader.model"          -> "java.net (java.base)";
   "cyou.obliquerays.media.downloader.model"          -> "java.nio.file (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "cyou.obliquerays.media.downloader.model (radio.recorder)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.lang (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.lang.invoke (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.net (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.util (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.util.concurrent (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.util.function (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.util.logging (java.logging)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.util.regex (java.base)";
   "cyou.obliquerays.media.downloader.subscriber"     -> "java.util.stream (java.base)";
   "cyou.obliquerays.status"                          -> "java.io (java.base)";
   "cyou.obliquerays.status"                          -> "java.lang (java.base)";
   "cyou.obliquerays.status"                          -> "java.lang.invoke (java.base)";
   "cyou.obliquerays.status"                          -> "java.nio.file (java.base)";
   "cyou.obliquerays.status"                          -> "java.nio.file.attribute (java.base)";
   "cyou.obliquerays.status"                          -> "java.util (java.base)";
   "cyou.obliquerays.status"                          -> "java.util.function (java.base)";
   "cyou.obliquerays.status"                          -> "java.util.logging (java.logging)";
   "cyou.obliquerays.status"                          -> "java.util.stream (java.base)";
}
